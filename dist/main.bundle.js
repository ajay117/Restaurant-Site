(()=>{"use strict";var n={566:(n,e,t)=>{t.d(e,{Z:()=>s});var i=t(15),o=t.n(i),a=t(645),r=t.n(a)()(o());r.push([n.id,'/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n/* Document\n   ========================================================================== */\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\nhtml {\n  line-height: 1.15;\n  /* 1 */\n  -webkit-text-size-adjust: 100%;\n  /* 2 */\n}\n/* Sections\n   ========================================================================== */\n/**\n * Remove the margin in all browsers.\n */\nbody {\n  margin: 0;\n}\n/**\n * Render the `main` element consistently in IE.\n */\nmain {\n  display: block;\n}\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n/* Grouping content\n   ========================================================================== */\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\nhr {\n  box-sizing: content-box;\n  /* 1 */\n  height: 0;\n  /* 1 */\n  overflow: visible;\n  /* 2 */\n}\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\npre {\n  font-family: monospace, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */\n}\n/* Text-level semantics\n   ========================================================================== */\n/**\n * Remove the gray background on active links in IE 10.\n */\na {\n  background-color: transparent;\n}\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\nabbr[title] {\n  border-bottom: none;\n  /* 1 */\n  text-decoration: underline;\n  /* 2 */\n  text-decoration: underline dotted;\n  /* 2 */\n}\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\nb,\nstrong {\n  font-weight: bolder;\n}\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */\n}\n/**\n * Add the correct font size in all browsers.\n */\nsmall {\n  font-size: 80%;\n}\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\nsub {\n  bottom: -0.25em;\n}\nsup {\n  top: -0.5em;\n}\n/* Embedded content\n   ========================================================================== */\n/**\n * Remove the border on images inside links in IE 10.\n */\nimg {\n  border-style: none;\n}\n/* Forms\n   ========================================================================== */\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit;\n  /* 1 */\n  font-size: 100%;\n  /* 1 */\n  line-height: 1.15;\n  /* 1 */\n  margin: 0;\n  /* 2 */\n}\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\nbutton,\ninput {\n  /* 1 */\n  overflow: visible;\n}\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\nbutton,\nselect {\n  /* 1 */\n  text-transform: none;\n}\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n/**\n * Remove the inner border and padding in Firefox.\n */\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n/**\n * Restore the focus styles unset by the previous rule.\n */\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n/**\n * Correct the padding in Firefox.\n */\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\nlegend {\n  box-sizing: border-box;\n  /* 1 */\n  color: inherit;\n  /* 2 */\n  display: table;\n  /* 1 */\n  max-width: 100%;\n  /* 1 */\n  padding: 0;\n  /* 3 */\n  white-space: normal;\n  /* 1 */\n}\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\nprogress {\n  vertical-align: baseline;\n}\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\ntextarea {\n  overflow: auto;\n}\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box;\n  /* 1 */\n  padding: 0;\n  /* 2 */\n}\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n[type="search"] {\n  -webkit-appearance: textfield;\n  /* 1 */\n  outline-offset: -2px;\n  /* 2 */\n}\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  /* 1 */\n  font: inherit;\n  /* 2 */\n}\n/* Interactive\n   ========================================================================== */\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\ndetails {\n  display: block;\n}\n/*\n * Add the correct display in all browsers.\n */\nsummary {\n  display: list-item;\n}\n/* Misc\n   ========================================================================== */\n/**\n * Add the correct display in IE 10+.\n */\ntemplate {\n  display: none;\n}\n/**\n * Add the correct display in IE 10.\n */\n[hidden] {\n  display: none;\n}\n',"",{version:3,sources:["webpack://./src/assets/stylesheets/normalize.css"],names:[],mappings:"AAAA,2EAA2E;AAC3E;+EAC+E;AAC/E;;;EAGE;AACF;EACE,iBAAiB;EACjB,MAAM;EACN,8BAA8B;EAC9B,MAAM;AACR;AACA;+EAC+E;AAC/E;;EAEE;AACF;EACE,SAAS;AACX;AACA;;EAEE;AACF;EACE,cAAc;AAChB;AACA;;;EAGE;AACF;EACE,cAAc;EACd,gBAAgB;AAClB;AACA;+EAC+E;AAC/E;;;EAGE;AACF;EACE,uBAAuB;EACvB,MAAM;EACN,SAAS;EACT,MAAM;EACN,iBAAiB;EACjB,MAAM;AACR;AACA;;;EAGE;AACF;EACE,iCAAiC;EACjC,MAAM;EACN,cAAc;EACd,MAAM;AACR;AACA;+EAC+E;AAC/E;;EAEE;AACF;EACE,6BAA6B;AAC/B;AACA;;;EAGE;AACF;EACE,mBAAmB;EACnB,MAAM;EACN,0BAA0B;EAC1B,MAAM;EACN,iCAAiC;EACjC,MAAM;AACR;AACA;;EAEE;AACF;;EAEE,mBAAmB;AACrB;AACA;;;EAGE;AACF;;;EAGE,iCAAiC;EACjC,MAAM;EACN,cAAc;EACd,MAAM;AACR;AACA;;EAEE;AACF;EACE,cAAc;AAChB;AACA;;;EAGE;AACF;;EAEE,cAAc;EACd,cAAc;EACd,kBAAkB;EAClB,wBAAwB;AAC1B;AACA;EACE,eAAe;AACjB;AACA;EACE,WAAW;AACb;AACA;+EAC+E;AAC/E;;EAEE;AACF;EACE,kBAAkB;AACpB;AACA;+EAC+E;AAC/E;;;EAGE;AACF;;;;;EAKE,oBAAoB;EACpB,MAAM;EACN,eAAe;EACf,MAAM;EACN,iBAAiB;EACjB,MAAM;EACN,SAAS;EACT,MAAM;AACR;AACA;;;EAGE;AACF;;EAEE,MAAM;EACN,iBAAiB;AACnB;AACA;;;EAGE;AACF;;EAEE,MAAM;EACN,oBAAoB;AACtB;AACA;;EAEE;AACF;;;;EAIE,0BAA0B;AAC5B;AACA;;EAEE;AACF;;;;EAIE,kBAAkB;EAClB,UAAU;AACZ;AACA;;EAEE;AACF;;;;EAIE,8BAA8B;AAChC;AACA;;EAEE;AACF;EACE,8BAA8B;AAChC;AACA;;;;;EAKE;AACF;EACE,sBAAsB;EACtB,MAAM;EACN,cAAc;EACd,MAAM;EACN,cAAc;EACd,MAAM;EACN,eAAe;EACf,MAAM;EACN,UAAU;EACV,MAAM;EACN,mBAAmB;EACnB,MAAM;AACR;AACA;;EAEE;AACF;EACE,wBAAwB;AAC1B;AACA;;EAEE;AACF;EACE,cAAc;AAChB;AACA;;;EAGE;AACF;;EAEE,sBAAsB;EACtB,MAAM;EACN,UAAU;EACV,MAAM;AACR;AACA;;EAEE;AACF;;EAEE,YAAY;AACd;AACA;;;EAGE;AACF;EACE,6BAA6B;EAC7B,MAAM;EACN,oBAAoB;EACpB,MAAM;AACR;AACA;;EAEE;AACF;EACE,wBAAwB;AAC1B;AACA;;;EAGE;AACF;EACE,0BAA0B;EAC1B,MAAM;EACN,aAAa;EACb,MAAM;AACR;AACA;+EAC+E;AAC/E;;EAEE;AACF;EACE,cAAc;AAChB;AACA;;EAEE;AACF;EACE,kBAAkB;AACpB;AACA;+EAC+E;AAC/E;;EAEE;AACF;EACE,aAAa;AACf;AACA;;EAEE;AACF;EACE,aAAa;AACf",sourcesContent:['/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n/* Document\n   ========================================================================== */\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\nhtml {\n  line-height: 1.15;\n  /* 1 */\n  -webkit-text-size-adjust: 100%;\n  /* 2 */\n}\n/* Sections\n   ========================================================================== */\n/**\n * Remove the margin in all browsers.\n */\nbody {\n  margin: 0;\n}\n/**\n * Render the `main` element consistently in IE.\n */\nmain {\n  display: block;\n}\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n/* Grouping content\n   ========================================================================== */\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\nhr {\n  box-sizing: content-box;\n  /* 1 */\n  height: 0;\n  /* 1 */\n  overflow: visible;\n  /* 2 */\n}\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\npre {\n  font-family: monospace, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */\n}\n/* Text-level semantics\n   ========================================================================== */\n/**\n * Remove the gray background on active links in IE 10.\n */\na {\n  background-color: transparent;\n}\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\nabbr[title] {\n  border-bottom: none;\n  /* 1 */\n  text-decoration: underline;\n  /* 2 */\n  text-decoration: underline dotted;\n  /* 2 */\n}\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\nb,\nstrong {\n  font-weight: bolder;\n}\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */\n}\n/**\n * Add the correct font size in all browsers.\n */\nsmall {\n  font-size: 80%;\n}\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\nsub {\n  bottom: -0.25em;\n}\nsup {\n  top: -0.5em;\n}\n/* Embedded content\n   ========================================================================== */\n/**\n * Remove the border on images inside links in IE 10.\n */\nimg {\n  border-style: none;\n}\n/* Forms\n   ========================================================================== */\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit;\n  /* 1 */\n  font-size: 100%;\n  /* 1 */\n  line-height: 1.15;\n  /* 1 */\n  margin: 0;\n  /* 2 */\n}\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\nbutton,\ninput {\n  /* 1 */\n  overflow: visible;\n}\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\nbutton,\nselect {\n  /* 1 */\n  text-transform: none;\n}\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n/**\n * Remove the inner border and padding in Firefox.\n */\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n/**\n * Restore the focus styles unset by the previous rule.\n */\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n/**\n * Correct the padding in Firefox.\n */\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\nlegend {\n  box-sizing: border-box;\n  /* 1 */\n  color: inherit;\n  /* 2 */\n  display: table;\n  /* 1 */\n  max-width: 100%;\n  /* 1 */\n  padding: 0;\n  /* 3 */\n  white-space: normal;\n  /* 1 */\n}\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\nprogress {\n  vertical-align: baseline;\n}\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\ntextarea {\n  overflow: auto;\n}\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box;\n  /* 1 */\n  padding: 0;\n  /* 2 */\n}\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n[type="search"] {\n  -webkit-appearance: textfield;\n  /* 1 */\n  outline-offset: -2px;\n  /* 2 */\n}\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  /* 1 */\n  font: inherit;\n  /* 2 */\n}\n/* Interactive\n   ========================================================================== */\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\ndetails {\n  display: block;\n}\n/*\n * Add the correct display in all browsers.\n */\nsummary {\n  display: list-item;\n}\n/* Misc\n   ========================================================================== */\n/**\n * Add the correct display in IE 10+.\n */\ntemplate {\n  display: none;\n}\n/**\n * Add the correct display in IE 10.\n */\n[hidden] {\n  display: none;\n}\n'],sourceRoot:""}]);const s=r},239:(n,e,t)=>{t.d(e,{Z:()=>s});var i=t(15),o=t.n(i),a=t(645),r=t.n(a)()(o());r.push([n.id,"*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n:root {\n  --fs-small: 14px;\n  --fs-medium: 18px;\n  --fs-large: 22px;\n}\nbody {\n  overflow: auto;\n}\n\n.flex {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n.hide {\n  display: none;\n}\n.content {\n  padding-top: 10px;\n}\n/* || Nav */\n.padded-container {\n  padding: 0 10px;\n}\n.hamburger,\n.close-btn {\n  width: 30px;\n  cursor: pointer;\n}\n.brand-name {\n  font-size: 22px;\n}\n.menu-item {\n  position: absolute;\n  background-color: #ffffff;\n  width: 100%;\n  height: 100%;\n  top: -10px;\n  left: 1000px;\n  opacity: 0;\n  transition: all 0.8s ease;\n  z-index: 1;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\n.menu-item li:not(:nth-child(1)) {\n  text-align: center;\n}\nli {\n  padding-bottom: 10px;\n  font-size: var(--fs-medium);\n}\n\n.align-right {\n  text-align: right;\n}\n.menu-item li:hover {\n  font-size: 1.2rem;\n}\n.container-menu {\n  opacity: 1;\n  padding: 0 10px;\n  transition: all 0.7s ease;\n  text-align: center;\n}\n.show-menu {\n  opacity: 1;\n  left: 0px;\n}\n.nav-link-container li {\n  cursor: pointer;\n}\n\n.intro {\n  position: relative;\n}\n.animate {\n  animation-name: animate;\n  animation-duration: 2s;\n}\n.responsive {\n  width: 200px;\n  height: auto;\n}\n.box {\n  width: 320px;\n  height: auto;\n  text-align: center;\n  flex: auto;\n  border: 1px solid black;\n  padding: 30px 0 10px;\n  margin: 20px 10px;\n  /* overflow: hidden; */\n}\n\n.box-container {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n@keyframes animate {\n  0% {\n    top: 200px;\n    opacity: 0;\n  }\n  100% {\n    top: 0px;\n  }\n}\n","",{version:3,sources:["webpack://./src/assets/stylesheets/styles.css"],names:[],mappings:"AAAA;;;EAGE,sBAAsB;AACxB;AACA;EACE,gBAAgB;EAChB,iBAAiB;EACjB,gBAAgB;AAClB;AACA;EACE,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;AACrB;AACA;EACE,aAAa;AACf;AACA;EACE,iBAAiB;AACnB;AACA,WAAW;AACX;EACE,eAAe;AACjB;AACA;;EAEE,WAAW;EACX,eAAe;AACjB;AACA;EACE,eAAe;AACjB;AACA;EACE,kBAAkB;EAClB,yBAAyB;EACzB,WAAW;EACX,YAAY;EACZ,UAAU;EACV,YAAY;EACZ,UAAU;EACV,yBAAyB;EACzB,UAAU;AACZ;AACA;EACE,qBAAqB;EACrB,UAAU;AACZ;AACA;EACE,kBAAkB;AACpB;AACA;EACE,oBAAoB;EACpB,2BAA2B;AAC7B;;AAEA;EACE,iBAAiB;AACnB;AACA;EACE,iBAAiB;AACnB;AACA;EACE,UAAU;EACV,eAAe;EACf,yBAAyB;EACzB,kBAAkB;AACpB;AACA;EACE,UAAU;EACV,SAAS;AACX;AACA;EACE,eAAe;AACjB;;AAEA;EACE,kBAAkB;AACpB;AACA;EACE,uBAAuB;EACvB,sBAAsB;AACxB;AACA;EACE,YAAY;EACZ,YAAY;AACd;AACA;EACE,YAAY;EACZ,YAAY;EACZ,kBAAkB;EAClB,UAAU;EACV,uBAAuB;EACvB,oBAAoB;EACpB,iBAAiB;EACjB,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,eAAe;AACjB;;AAEA;EACE;IACE,UAAU;IACV,UAAU;EACZ;EACA;IACE,QAAQ;EACV;AACF",sourcesContent:["*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n:root {\n  --fs-small: 14px;\n  --fs-medium: 18px;\n  --fs-large: 22px;\n}\nbody {\n  overflow: auto;\n}\n\n.flex {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n.hide {\n  display: none;\n}\n.content {\n  padding-top: 10px;\n}\n/* || Nav */\n.padded-container {\n  padding: 0 10px;\n}\n.hamburger,\n.close-btn {\n  width: 30px;\n  cursor: pointer;\n}\n.brand-name {\n  font-size: 22px;\n}\n.menu-item {\n  position: absolute;\n  background-color: #ffffff;\n  width: 100%;\n  height: 100%;\n  top: -10px;\n  left: 1000px;\n  opacity: 0;\n  transition: all 0.8s ease;\n  z-index: 1;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\n.menu-item li:not(:nth-child(1)) {\n  text-align: center;\n}\nli {\n  padding-bottom: 10px;\n  font-size: var(--fs-medium);\n}\n\n.align-right {\n  text-align: right;\n}\n.menu-item li:hover {\n  font-size: 1.2rem;\n}\n.container-menu {\n  opacity: 1;\n  padding: 0 10px;\n  transition: all 0.7s ease;\n  text-align: center;\n}\n.show-menu {\n  opacity: 1;\n  left: 0px;\n}\n.nav-link-container li {\n  cursor: pointer;\n}\n\n.intro {\n  position: relative;\n}\n.animate {\n  animation-name: animate;\n  animation-duration: 2s;\n}\n.responsive {\n  width: 200px;\n  height: auto;\n}\n.box {\n  width: 320px;\n  height: auto;\n  text-align: center;\n  flex: auto;\n  border: 1px solid black;\n  padding: 30px 0 10px;\n  margin: 20px 10px;\n  /* overflow: hidden; */\n}\n\n.box-container {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n@keyframes animate {\n  0% {\n    top: 200px;\n    opacity: 0;\n  }\n  100% {\n    top: 0px;\n  }\n}\n"],sourceRoot:""}]);const s=r},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t=n(e);return e[2]?"@media ".concat(e[2]," {").concat(t,"}"):t})).join("")},e.i=function(n,t,i){"string"==typeof n&&(n=[[null,n,""]]);var o={};if(i)for(var a=0;a<this.length;a++){var r=this[a][0];null!=r&&(o[r]=!0)}for(var s=0;s<n.length;s++){var A=[].concat(n[s]);i&&o[A[0]]||(t&&(A[2]?A[2]="".concat(t," and ").concat(A[2]):A[2]=t),e.push(A))}},e}},15:n=>{function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,i=new Array(e);t<e;t++)i[t]=n[t];return i}n.exports=function(n){var t,i,o=(i=4,function(n){if(Array.isArray(n))return n}(t=n)||function(n,e){var t=n&&("undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"]);if(null!=t){var i,o,a=[],r=!0,s=!1;try{for(t=t.call(n);!(r=(i=t.next()).done)&&(a.push(i.value),!e||a.length!==e);r=!0);}catch(n){s=!0,o=n}finally{try{r||null==t.return||t.return()}finally{if(s)throw o}}return a}}(t,i)||function(n,t){if(n){if("string"==typeof n)return e(n,t);var i=Object.prototype.toString.call(n).slice(8,-1);return"Object"===i&&n.constructor&&(i=n.constructor.name),"Map"===i||"Set"===i?Array.from(n):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?e(n,t):void 0}}(t,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=o[1],r=o[3];if("function"==typeof btoa){var s=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),A="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),d="/*# ".concat(A," */"),c=r.sources.map((function(n){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(n," */")}));return[a].concat(c).concat([d]).join("\n")}return[a].join("\n")}},695:n=>{var e={};n.exports=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}},379:n=>{var e=[];function t(n){for(var t=-1,i=0;i<e.length;i++)if(e[i].identifier===n){t=i;break}return t}function i(n,i){for(var a={},r=[],s=0;s<n.length;s++){var A=n[s],d=i.base?A[0]+i.base:A[0],c=a[d]||0,l="".concat(d," ").concat(c);a[d]=c+1;var p=t(l),u={css:A[1],media:A[2],sourceMap:A[3]};-1!==p?(e[p].references++,e[p].updater(u)):e.push({identifier:l,updater:o(u,i),references:1}),r.push(l)}return r}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=i(n=n||[],o=o||{});return function(n){n=n||[];for(var r=0;r<a.length;r++){var s=t(a[r]);e[s].references--}for(var A=i(n,o),d=0;d<a.length;d++){var c=t(a[d]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}a=A}}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e),e}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var i=t.css,o=t.media,a=t.sourceMap;o?n.setAttribute("media",o):n.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(i,n)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},716:(n,e,t)=>{n.exports=t.p+"97d4c0a10ac97607dc65.svg"},670:(n,e,t)=>{n.exports=t.p+"2d4061552fac064ed076.svg"}},e={};function t(i){var o=e[i];if(void 0!==o)return o.exports;var a=e[i]={id:i,exports:{}};return n[i](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var i=e.getElementsByTagName("script");i.length&&(n=i[i.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),(()=>{var n=t(379),e=t.n(n),i=t(795),o=t.n(i),a=t(695),r=t.n(a),s=t(216),A=t.n(s),d=t(566),c={styleTagTransform:function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}},setAttributes:function(n){var e=t.nc;e&&n.setAttribute("nonce",e)},insert:function(n){var e=r()("head");if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");e.appendChild(n)}};c.domAPI=o(),c.insertStyleElement=A(),e()(d.Z,c),d.Z&&d.Z.locals&&d.Z.locals;var l=t(239),p={styleTagTransform:function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}},setAttributes:function(n){var e=t.nc;e&&n.setAttribute("nonce",e)},insert:function(n){var e=r()("head");if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");e.appendChild(n)}};p.domAPI=o(),p.insertStyleElement=A(),e()(l.Z,p),l.Z&&l.Z.locals&&l.Z.locals;var u=t(670),m=t(716);function h(){let n=document.createElement("nav"),e=document.createElement("div"),t=document.createElement("div"),i=document.createElement("div"),o=document.createElement("ul"),a=new Image,r=new Image,s=document.createElement("li"),A=document.createElement("li"),d=document.createElement("li"),c=document.createElement("li"),l=document.createElement("li");a.src=u,a.alt="",a.classList.add("hamburger"),r.src=m,r.alt="",r.classList.add("close-btn"),n.classList.add("padded-container"),n.classList.add("flex"),e.classList.add("brand-name"),i.classList.add("menu-item"),o.classList.add("padded-container"),o.classList.add("nav-link-container"),e.textContent="Aj's Kitchen",t.appendChild(a),s.classList.add("align-right"),s.appendChild(r),o.appendChild(s),A.innerHTML='<a href="#">HOME</a>',d.innerHTML='<a href="#">MENU</a>',c.innerHTML='<a href="#">ABOUT</a>',l.innerHTML='<a href="#">CONTACT</a>';let p=A.querySelector("a"),C=d.querySelector("a"),b=c.querySelector("a"),g=l.querySelector("a");return o.appendChild(A),o.appendChild(d),o.appendChild(c),o.appendChild(l),i.appendChild(o),n.appendChild(e),n.appendChild(t),n.appendChild(i),a.addEventListener("click",(()=>{i.classList.add("show-menu")})),r.addEventListener("click",(n=>{i.classList.remove("show-menu")})),p.addEventListener("click",(()=>{E()})),C.addEventListener("click",(()=>{f()})),b.addEventListener("click",(()=>{!function(){let n=document.querySelector(".content");n.innerHTML&&(n.innerHTML="");let e=document.createElement("div");e.textContent="About Page",e.classList.add("padded-container"),n.appendChild(h()),n.appendChild(e)}()})),g.addEventListener("click",(()=>{!function(){let n=document.querySelector(".content");n.innerHTML&&(n.innerHTML="");let e=document.createElement("div");e.textContent="Contact Page",e.classList.add("padded-container"),n.appendChild(h()),n.appendChild(e)}()})),n}const C=[{name:"Palak Paneer/Saag Paneer",src:"https://img.buzzfeed.com/buzzfeed-static/static/2014-09/23/13/enhanced/webdr04/enhanced-11174-1411493963-11.jpg?downsize=600:*&output-format=auto&output-quality=auto",description:"Palak paneer is what Popeye would eat if he ate Indian food. It's cooked spinach with a soft, fresh white cheese called paneer, and it's amazing. You might also know this dish as saag paneer. 'Palak' is the Hindi word for spinich, while 'saag' means greens, so the two terms are somewhat overlapping.",price:500},{name:"Chana Dal",src:"https://img.buzzfeed.com/buzzfeed-static/static/2014-09/23/11/enhanced/webdr11/longform-original-5455-1411487211-4.jpg?downsize=600:*&output-format=auto&output-quality=auto",description:"Chana dal is a dish consisting primarily of split chickpeas stewed with spices such as turmeric. Dal also refers to other legumes such as peas, kidney beans, and lentils",price:300},{name:"Aloo Gobi",src:"https://img.buzzfeed.com/buzzfeed-static/static/2014-09/23/12/enhanced/webdr01/longform-original-5128-1411489501-20.jpg?downsize=600:*&output-format=auto&output-quality=auto",description:"Aloo gobi is a flavorful dish made with potatoes and cauliflower that are cooked in garlic, ginger, turmeric, and other spices. It's typically on the spicier side and is drier because, unlike many main dishes, it isn't served as a stew or in a sauce.",price:200},{name:"Tandoori Chicken",src:"https://img.buzzfeed.com/buzzfeed-static/static/2014-09/23/12/enhanced/webdr09/longform-original-11349-1411490150-45.jpg?downsize=600:*&output-format=auto&output-quality=auto",description:"Traditionally, tandoori chicken is roasted in a clay oven called a tandoor. The chicken is marinated in yogurt and spices overnight before it goes in the tandoor on long skewers.",price:1e3},{name:"Chicken Tikka Masala",src:"https://img.buzzfeed.com/buzzfeed-static/static/2014-09/23/11/enhanced/webdr02/enhanced-11477-1411487412-6.jpg?downsize=600:*&output-format=auto&output-quality=auto",description:"Chicken tikka masala is a classic Indian takeout dish and a prominent feature of Indian as well as British cuisine. It's so popular that it's even been called, unofficially, the 'national dish of the U.K.' Pieces of tandoori chicken are cut up and stewed in a rich, spicy tomato-based sauce consisting of a spice mix called garam masala. If it's your first time having Indian food, this is a good one to start with.",price:150},{name:"Butter Chicken",src:"https://img.buzzfeed.com/buzzfeed-static/static/2014-09/23/13/enhanced/webdr07/enhanced-16372-1411493621-4.jpg?downsize=600:*&output-format=auto&output-quality=auto",description:"Butter chicken is very similar to chicken tikka masala, but whole, bone-in pieces of chicken may be used. In most cases, however, chicken tikka masala and butter chicken are nearly interchangeable.",price:600},{name:"Lamb Rogan Josh",src:"https://img.buzzfeed.com/buzzfeed-static/static/2014-09/23/11/enhanced/webdr09/longform-original-11885-1411487350-11.jpg?downsize=600:*&output-format=auto&output-quality=auto",description:"Lamb rogan josh originally comes from Pakistan and the Kashmir region of Northern India and is available today at most Indian takeout restaurants around the world. After the meat marinates in yogurt, garlic, and ginger, it's cooked with onions, peppers, and loads of spices. Cardamom, cloves, cinnamon, coriander, fennel seeds, garam masala, and the list goes on.",price:1500},{name:"Chicken Vindaloo",src:"https://img.buzzfeed.com/buzzfeed-static/static/2014-09/23/11/enhanced/webdr02/longform-original-10652-1411487381-25.jpg?downsize=600:*&output-format=auto&output-quality=auto",description:"Vindaloos are characterized by a thinner, typically tangier sauce made with a splash of vinegar. These dishes also typically tend to be on the spicier side with a blend of hot chilies in the mix, so proceed with caution.",price:1250},{name:"Chicken Korma",src:"https://img.buzzfeed.com/buzzfeed-static/static/2014-09/23/12/enhanced/webdr05/longform-original-10422-1411490000-35.jpg?downsize=600:*&output-format=auto&output-quality=auto",description:"If spicy food isn't your game, korma might be a safer bet. This curry dish is often made with coconut milk and ground up almonds or cashews, which give the sauce a pleasant nutty flavor and smoothness. The mildness of the sauce lets the aroma of milder spices shine.",price:1e3},{name:"Chicken Jalfrezi",src:"https://img.buzzfeed.com/buzzfeed-static/static/2014-09/23/12/enhanced/webdr08/longform-original-4996-1411490556-10.jpg?downsize=600:*&output-format=auto&output-quality=auto",description:"Chicken jalfrezi is characterized by its large pieces of onions and red and green peppers, which make this dish similar to a stir fry. The meat and vegetables are cooked in oil and spices, then tomatoes are added to create a thick, chunky sauce. Go crazy, jalfrezi.",price:1500},{name:"Biryani",src:"https://img.buzzfeed.com/buzzfeed-static/static/2014-09/23/13/enhanced/webdr09/enhanced-22545-1411492343-1.jpg?downsize=600:*&output-format=auto&output-quality=auto",description:"If jalfrezi is like Indian stir fry, then biryani is like Indian fried rice. Rice is the primary ingredient to which any combination of meats, vegetables, dried fruits, nuts, and spices are added. Some biryanis contain raisins, which add a level of sweetness to the otherwise savory and flavorful dish",price:1800}];function f(){let n=document.querySelector(".content");n.innerHTML&&(n.innerHTML="");let e=document.createElement("div"),t=document.createElement("h3"),i=document.createElement("ul");t.textContent="Category",["Main","Appetizer","Drinks & Dessert"].forEach((n=>{let e=document.createElement("li"),t=document.createElement("a");t.textContent=n,t.href="#","Main"===n&&t.addEventListener("click",(()=>{!function(){let n=document.querySelector(".content");n.innerHTML&&(n.innerHTML="");let e=document.createElement("div"),t=document.createElement("h3");e.appendChild(t),C.forEach((n=>{let i=document.createElement("div"),o=document.createElement("img"),a=document.createElement("p"),r=document.createElement("p");t.textContent="Lorem ipsum dolor",t.classList.add("padded-container"),o.src=n.src,o.alt="",o.classList.add("responsive"),a.textContent=n.name,r.textContent=`Rs. ${n.price}`,i.appendChild(o),i.appendChild(a),i.appendChild(r),i.classList.add("box"),i.classList.add("padded-container"),e.classList.add("box-container"),e.appendChild(i)})),n.appendChild(h()),n.appendChild(t),n.appendChild(e)}()})),"Appetizer"===n&&t.addEventListener("click",(()=>{console.log("Appetizer")})),"Drinks & Dessert"===n&&(n="drinks",t.addEventListener("click",(()=>{console.log("Drinks")}))),t.classList.add(n.toLowerCase()),e.appendChild(t),i.appendChild(e)})),e.classList.add("container-menu"),e.appendChild(t),e.appendChild(i),n.appendChild(h()),n.appendChild(e)}function E(){let n=document.querySelector(".content");n.innerHTML&&(n.innerHTML="");let e=document.createElement("div"),t=document.createElement("h3"),i=document.createElement("p"),o=document.createElement("button");t.textContent="Lorem ipsum dolor sit amet",i.textContent="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",o.textContent="Explore",o.addEventListener("click",(()=>{f()})),e.appendChild(t),e.appendChild(i),e.appendChild(o),e.classList.add("intro"),e.classList.add("padded-container"),n.appendChild(h()),n.appendChild(e)}E(),window.addEventListener("DOMContentLoaded",(()=>{document.querySelector(".intro").classList.add("animate")}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,